/**
 * function to find starting node of cycle in linkedlist if it exists
 * compilation: gcc find_start_node_of_cycle_if_exists.c
 * Execution: ./a.out
 * @Abhishek (1910991168) 
 * 30/08/2021
 * Assignemnt: Linked List
*/

Definition for singly-linked list.
struct ListNode {
    int val;
    struct ListNode *next;
};
struct ListNode *detectCycle(struct ListNode *head) {
    //base case
    if(head == NULL || head -> next == NULL)
        return NULL;
    // required nodes
    struct ListNode *slow = head;
    struct ListNode *fast = head;
    struct ListNode *entry = head;
    
    while(fast -> next != NULL && fast -> next -> next != NULL)
    {
        slow = slow -> next;
        fast = fast -> next -> next;
         // if cycle is present ..finding the first node
         if(slow == fast)
         {
             while(slow != entry) 
             {
                 slow = slow -> next;
                 entry = entry -> next;
             }
             return entry;
         }

    }

        return NULL;
}
